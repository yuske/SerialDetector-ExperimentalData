digraph G {
node [fontsize = 16];
0 [label="BinaryFormatter::Deserialize", shape="box", style="filled", fillcolor="brown1", color="brown1"];
subgraph cluster_0 {
label="Veeam.Communication";
color=darkslateblue;
fontcolor=darkslateblue;
penwidth=2;
labeljust=l;
1 [label="ChannelTransitObject::Deserialize`1", shape="box", style="filled", fillcolor="green2", color="green2"];
2 [label="MessagePipeline/<>c__DisplayClass2_0::<ProcessPacket>b__0", shape="box", style="filled, rounded", fillcolor="darkgoldenrod1", color="darkgoldenrod1"];
3 [label="MethodInvokePipeline::ProcessPacket", shape="box"];
4 [label="ChannelInvokeData::GetMethodInvokeMessage", shape="box"];
5 [label="InvokeProcessorBase`1::OnInvokeCompleted", shape="box"];
6 [label="MethodInvokePipeline::ProcessPacketInternal", shape="box"];
7 [label="MethodInvokePipeline/PipelinePacket::ReturnToPipeline", shape="box", style="filled, rounded", fillcolor="darkgoldenrod1", color="darkgoldenrod1"];
8 [label="ChannelInvokeData::GetInvokeStub", shape="box"];
9 [label="ChannelInvokeData::PrepareNegotiateInvoke", shape="box", style="filled, rounded", fillcolor="darkgoldenrod1", color="darkgoldenrod1"];
10 [label="NegotiateInvokeProcessor`1/<>c__DisplayClass8_1::<PerformInvokeInternal>b__1", shape="box", style="filled, rounded", fillcolor="darkgoldenrod1", color="darkgoldenrod1"];
11 [label="RegularInvokeProcessor`1/<>c__DisplayClass6_1::<PerformInvokeInternal>b__1", shape="box", style="filled, rounded", fillcolor="darkgoldenrod1", color="darkgoldenrod1"];
12 [label="MethodInvokePipeline/<>c__DisplayClass6_0::<PutPacket>b__0", shape="box", style="filled, rounded", fillcolor="darkgoldenrod1", color="darkgoldenrod1"];
13 [label="MethodInvokePipeline::ProcessMethodInvoke", shape="box", style="filled, rounded", fillcolor="darkgoldenrod1", color="darkgoldenrod1"];
}
1 -> 0 [color="gray50"];
2 -> 1 [color="gray50"];
3 -> 1 [color="gray50"];
4 -> 1 [color="gray50"];
5 -> 1 [color="gray50"];
6 -> 3 [color="gray50"];
7 -> 3 [color="gray50"];
8 -> 4 [color="gray50"];
9 -> 4 [color="gray50"];
10 -> 5 [color="gray50"];
11 -> 5 [color="gray50"];
12 -> 6 [color="gray50"];
13 -> 8 [color="gray50"];
}
